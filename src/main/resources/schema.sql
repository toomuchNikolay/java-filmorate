CREATE TABLE IF NOT EXISTS mpa_ratings (
    mpa_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(5) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(255) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS users (
    user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(255) NOT NULL CONSTRAINT unique_email UNIQUE,
    login VARCHAR(255) NOT NULL CONSTRAINT unique_login UNIQUE,
    name VARCHAR(255),
    birthday DATE,
    CONSTRAINT valid_email CHECK (email LIKE '_%@_%._%'),
    CONSTRAINT valid_login CHECK (login NOT LIKE '% %'),
    CONSTRAINT valid_birthday CHECK (birthday <= CURRENT_DATE)
);

CREATE TABLE IF NOT EXISTS films (
    film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    title VARCHAR(255) NOT NULL,
    description VARCHAR(200),
    release_date DATE NOT NULL,
    duration INT NOT NULL,
    mpa_id BIGINT NOT NULL,
    FOREIGN KEY (mpa_id) REFERENCES mpa_ratings(mpa_id),
    CONSTRAINT valid_release_date CHECK (release_date >= '1895-12-28'),
    CONSTRAINT valid_duration CHECK (duration > 0)
);

CREATE DOMAIN IF NOT EXISTS FRIENDSHIP_STATUS AS VARCHAR(9)
CHECK (VALUE IN ('PENDING', 'CONFIRMED'));

CREATE TABLE IF NOT EXISTS friendships (
    user_id BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    status FRIENDSHIP_STATUS NOT NULL DEFAULT 'PENDING',
    PRIMARY KEY (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users(user_id) ON DELETE CASCADE,
    CONSTRAINT self_friendship CHECK (user_id != friend_id)
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    PRIMARY KEY (film_id, user_id),
    FOREIGN KEY (film_id) REFERENCES films(film_id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id BIGINT NOT NULL,
    genre_id BIGINT NOT NULL,
    PRIMARY KEY (film_id, genre_id),
    FOREIGN KEY (film_id) REFERENCES films(film_id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres(genre_id) ON DELETE CASCADE
);